name: ovpn3-connector
description: 
  Setup vpn using a self-contained .ovpn file on both Windows and Linux
inputs:
  ovpn-config:
    description: Complete self-contained .ovpn file
    required: true
  vpn-user:
    description: Username for the VPN
    required: false
  vpn-pass:
    description: Password for the VPN
    required: false
runs:
  using: composite
  steps:
    # Steps for Linux runners
    - name: Write VPN Files (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        mkdir -p ~/.ssh
        echo "${{ inputs.ovpn-config }}" > .github/vpn.ovpn
        ls -al .github/vpn.ovpn
    - name: Install openvpn3 (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install openvpn
    - name: VPN Connect (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        { printf "${{ inputs.vpn-user }}\n${{ inputs.vpn-pass }}\n" ; } | sudo openvpn --config .github/vpn.ovpn --daemon

    # Steps for Windows runners
    - name: Write VPN Files (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        mkdir -Force $HOME\.ssh
        Set-Content -Path .github\vpn.ovpn -Value "${{ inputs.ovpn-config }}"
        Get-ChildItem -Path .github\vpn.ovpn
    - name: Install openvpn3 connect (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $Url = "https://openvpn.net/downloads/openvpn-connect-v3-windows.msi"
        $Output = "$env:TEMP\openvpn-connect-v3-windows.msi"
        Invoke-WebRequest -Uri $Url -OutFile $Output
        Start-Process -FilePath "msiexec.exe" -ArgumentList "/i $Output /quiet /norestart" -Wait
        Remove-Item -Path $Output -Force
    - name: VPN Connect (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        "C:\Program Files\OpenVPN Connect\ovpnconnector.exe" --daemon
        Start-Sleep -Seconds 5
        $vpnConfig = Get-Content -Path .github\vpn.ovpn -Raw
        $vpnConfig | Set-Content -Path "$env:ProgramData\OpenVPN Connect\config.ovpn" -Force
        $vpnUser = "${{ inputs.vpn-user }}"
        $vpnPass = "${{ inputs.vpn-pass }}"
        $vpnPass = ConvertTo-SecureString -String $vpnPass -AsPlainText -Force
        $vpnCred = New-Object System.Management.Automation.PSCredential($vpnUser, $vpnPass)
        $vpnCred | Export-Clixml -Path "$env:ProgramData\OpenVPN Connect\config.ovpn.xml" -Force
        Start-Sleep -Seconds 5
        & "C:\Program Files\OpenVPN Connect\ovpnconnector.exe" --connect "$env:ProgramData\OpenVPN Connect\config.ovpn" --user "$vpnUser" --password "$vpnPass"
    - name: Network check
      if: always()
      shell: pwsh
      run: |
        ipconfig /all
    - name: Kill VPN Connection
      if: always()
      shell: pwsh
      run: |
        taskkill /F /IM openvpn.exe
